const musicPlayer = require("../../structures/musicPlayer");
const yts = require("yt-search");

module.exports.run = async function (client, message, args) {
    let search = args.join(" ");
    let channel = message.member.voice.channel;
    if (!channel) {
        message.reply("‚ùì ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏´‡∏ô‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏¥ ‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡∏≠‡∏î‡∏ü‡∏±‡∏á‡∏ô‡πâ‡∏≤‡∏≤...")
        .then(function (msg) {
            msg.delete({
                timeout: 10000
            });
        });
    } else {
        let permissions = channel.permissionsFor(message.client.user);
        if (!permissions.has("CONNECT")) {
            message.reply("üö´ ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡∏≤...‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∞ ‡∏•‡∏≠‡∏á‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏î‡∏π‡∏ô‡∏∞‡∏Ñ‡∏∞")
            .then(function (msg) {
                msg.delete({
                    timeout: 10000
                });
            });
        } else {
            if (!permissions.has("SPEAK")) {
                message.reply("üö´ ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡∏≤...‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∞ ‡∏•‡∏≠‡∏á‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏î‡∏π‡∏ô‡∏∞‡∏Ñ‡∏∞")
                .then(function (msg) {
                    msg.delete({
                        timeout: 10000
                    });
                });
            } else {
                if (search === "") {
                    message.reply("‚ùì ‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏•‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏´‡∏£‡∏≠‡∏Ñ‡∏∞ ‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÄ‡∏•‡∏¢‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏ô‡∏∞")
                    .then(function (msg) {
                        msg.delete({
                            timeout: 10000
                        });
                    });
                } else {
                    let serverQueue = message.client.queue.get(message.guild.id);
                    let videoPattern = /^(https?:\/\/)?(www\.)?(youtube\.com|youtu\.?be)\/.+$/gi;
                    let playlistPattern = /^.*(list=)([^#\&\?]*).*/gi;
                    let url = args[0];

                    let queueConstruct = {
                        "textChannel": message.channel,
                        "voiceChannel": channel,
                        "connection": null,
                        "require": {
                            "avatar": message.author.displayAvatarURL(),
                            "username": message.author.username,
                            "timestamp": new Date()
                        },
                        "songs": [],
                        "loop": false,
                        "volume": 3,
                        "playing": true
                    };

                    // Start the playlist if playlist url was provided
                    if (videoPattern.test(url) && playlistPattern.test(url)) {
                        message.client.commands.get("playlist").run(client, message, args);
                    } else {
                        yts(search, function (error, result) {
                            if (error) {
                                console.error(error);
                                message.reply("‚ùé ‡∏≠‡∏∑‡∏°‡∏°...‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÄ‡∏û‡∏•‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞")
                                .then(function (msg) {
                                    msg.delete({
                                        timeout: 10000
                                    });
                                });
                            } else {
                                let videos = result.videos;

                                let song = {
                                    "id": videos[0].videoId,
                                    "title": videos[0].title,
                                    "url": videos[0].url,
                                    "duration": videos[0].duration.timestamp
                                };

                                if (serverQueue) {
                                    serverQueue.songs.push(song);
                                    message.channel.send("‚úÖ **" + song.title + "** ‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏∞!!");
                                } else {
                                    message.client.queue.set(message.guild.id, queueConstruct);
                                    queueConstruct.songs.push(song);

                                    channel.join()
                                        .then(function (connection) {
                                            queueConstruct.connection = connection;
                                            musicPlayer(client, message, queueConstruct.songs[0]);
                                        }).catch(function (error) {
                                            console.error("I could not join the voice channel: " + error);
                                            message.client.queue.delete(message.guild.id);
                                            channel.leave();
                                            message.channel.send("‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡∏∞: " + error);
                                        });
                                }
                            }
                        });
                    }
                }
            }
        }
    }
};

module.exports.help = {
    "name": "play",
    "description": "Sing to listen",
    "usage": "Yplay <name>",
    "category": "music",
    "aliases": ["‡πÄ‡∏•‡πà‡∏ô", "p"]
};